
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTLEGEEQNQNOTANDORleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSADDRESS AND ASSERT BREAK CHAR CHAR_CONST COMMA DECREASE DIVIDE ELSE EQ EQDIV EQMINUS EQMOD EQPLUS EQTIMES EQUALS FLOAT FLOAT_CONST FOR GE GT ID IF INCREASE INT INT_CONST LBRACE LBRACKET LE LPAREN LT MINUS MOD NOT NQ OR PLUS PRINT RBRACE RBRACKET READ RETURN RPAREN SEMI STRING TIMES UMINUS VOID WHILE program : global_declaration\n         global_declaration : function_definition\n                               | declaration\n         function_definition : type_specifier declarator declaration_list compound_statement\n                                | declarator declaration_list compound_statement\n         declaration : type_specifier SEMI\n                        | type_specifier init_declarator_list SEMI\n         init_declarator_list : init_declarator\n                                 | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         initializer : assignment_expression\n                        | LBRACE initializer_list RBRACE\n                        | LBRACE initializer_list COMMA RBRACE\n         initializer_list : initializer\n                             | initializer_list COMMA initializer\n         declaration_list : declaration\n                             | declaration_list declaration\n         declarator : pointer direct_declarator\n                       | direct_declarator\n         parameter_list : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration : type_specifier declarator\n         compound_statement : LBRACE declaration_list statement_list RBRACE\n         expression_statement : expression\n                                 | empty\n         expression : assignment_expression\n                       | expression COMMA assignment_expression\n         selection_statement : IF LPAREN expression RPAREN statement\n                                | IF LPAREN expression RPAREN statement ELSE statement\n         iteration_statement : WHILE LPAREN expression RPAREN statement\n                                | FOR LPAREN expression SEMI expression SEMI expression RPAREN statement\n                                | FOR LPAREN SEMI expression SEMI expression RPAREN statement\n                                | FOR LPAREN expression SEMI SEMI expression RPAREN statement\n                                | FOR LPAREN SEMI SEMI expression RPAREN statement\n                                | FOR LPAREN expression SEMI expression SEMI RPAREN statement\n                                | FOR LPAREN SEMI expression SEMI RPAREN statement\n                                | FOR LPAREN expression SEMI SEMI RPAREN statement\n                                | FOR LPAREN SEMI SEMI RPAREN statement\n                                | FOR LPAREN declaration expression SEMI expression RPAREN statement\n                                | FOR LPAREN declaration SEMI expression RPAREN statement\n                                | FOR LPAREN declaration expression SEMI RPAREN statement\n                                | FOR LPAREN declaration SEMI RPAREN statement\n         jump_statement : BREAK SEMI\n                           | RETURN expression SEMI\n                           | RETURN SEMI\n         assert_statement : ASSERT expression SEMI\n                             | ASSERT SEMI\n         print_statement : PRINT LPAREN expression RPAREN SEMI\n                            | PRINT LPAREN RPAREN SEMI\n         read_statement : READ LPAREN argument_expression RPAREN SEMI\n         statement : expression_statement\n                      | compound_statement\n                      | selection_statement\n                      | iteration_statement\n                      | jump_statement\n                      | assert_statement\n                      | print_statement\n                      | read_statement\n         statement_list : statement\n                           | statement_list statement\n         assignment_expression : binary_expression\n                                  | unary_expression assignment_operator assignment_expression\n         binary_expression : cast_expression\n                              | binary_expression PLUS binary_expression\n                              | binary_expression MINUS binary_expression\n                              | binary_expression TIMES binary_expression\n                              | binary_expression DIVIDE binary_expression\n                              | binary_expression MOD binary_expression\n                              | binary_expression LT binary_expression\n                              | binary_expression LE binary_expression\n                              | binary_expression GT binary_expression\n                              | binary_expression GE binary_expression\n                              | binary_expression EQ binary_expression\n                              | binary_expression NQ binary_expression\n                              | binary_expression AND binary_expression\n                              | binary_expression OR binary_expression\n         unary_expression : postfix_expression\n                             | INCREASE unary_expression\n                             | DECREASE unary_expression\n                             | unary_operator cast_expression\n         postfix_expression : primary_expression\n                               | postfix_expression LBRACKET expression RBRACKET\n                               | postfix_expression LPAREN argument_expression RPAREN\n                               | postfix_expression LPAREN RPAREN\n                               | postfix_expression INCREASE\n                               | postfix_expression DECREASE\n         cast_expression : unary_expression\n                            | LPAREN type_specifier RPAREN cast_expression\n         primary_expression : ID\n                               | constant\n                               | STRING\n                               | LPAREN expression RPAREN\n         argument_expression : assignment_expression\n                                | argument_expression COMMA assignment_expression\n         constant_expression : binary_expression\n         assignment_operator : EQUALS\n                               | EQTIMES\n                               | EQDIV\n                               | EQMOD\n                               | EQPLUS\n                               | EQMINUS\n         unary_operator : ADDRESS\n                           | TIMES\n                           | PLUS\n                           | UMINUS\n                           | NOT\n         constant : INT_CONST\n                     | FLOAT_CONST\n                     | CHAR_CONST\n         pointer : TIMES pointer\n                    | TIMES\n         direct_declarator : ID\n                              | LPAREN declarator RPAREN\n                              | direct_declarator LBRACKET constant_expression RBRACKET\n                              | direct_declarator LBRACKET RBRACKET\n                              | direct_declarator LPAREN parameter_list RPAREN\n                              | direct_declarator LPAREN id_list RPAREN\n         id_list : ID\n                    | id_list ID\n         type_specifier : VOID\n                           | INT\n                           | FLOAT\n                           | CHAR\n         empty :'
    
_lr_action_items = {'VOID':([0,6,12,14,16,17,20,21,23,25,28,30,33,34,37,43,63,71,72,97,98,99,159,],[7,7,-20,-113,7,-6,7,-17,-19,7,7,-7,-18,7,-116,7,-114,7,-115,-117,7,-118,7,]),'INT':([0,6,12,14,16,17,20,21,23,25,28,30,33,34,37,43,63,71,72,97,98,99,159,],[8,8,-20,-113,8,-6,8,-17,-19,8,8,-7,-18,8,-116,8,-114,8,-115,-117,8,-118,8,]),'FLOAT':([0,6,12,14,16,17,20,21,23,25,28,30,33,34,37,43,63,71,72,97,98,99,159,],[9,9,-20,-113,9,-6,9,-17,-19,9,9,-7,-18,9,-116,9,-114,9,-115,-117,9,-118,9,]),'CHAR':([0,6,12,14,16,17,20,21,23,25,28,30,33,34,37,43,63,71,72,97,98,99,159,],[10,10,-20,-113,10,-6,10,-17,-19,10,10,-7,-18,10,-116,10,-114,10,-115,-117,10,-118,10,]),'TIMES':([0,5,7,8,9,10,13,15,17,21,22,24,29,30,31,33,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[13,13,-121,-122,-123,-124,13,13,-6,-17,13,41,41,-7,13,-18,75,-64,-105,-104,-88,41,-78,41,41,41,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,13,41,75,-88,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-27,41,41,-86,-87,-79,41,-80,-81,41,-97,-98,-99,-100,-101,-102,41,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,41,41,75,75,-67,-68,-69,75,75,75,75,75,75,75,75,41,-93,41,-85,41,-63,-24,-61,41,41,41,-44,-46,-48,41,41,-89,-28,-83,-84,41,41,41,-45,-47,41,41,41,41,41,-50,-29,-31,41,41,41,41,41,-49,-51,41,41,41,41,-39,41,41,41,-43,-30,41,41,-38,-35,41,-37,41,-42,-41,41,-36,-34,-33,-40,-32,]),'ID':([0,5,7,8,9,10,11,13,15,17,21,22,24,25,26,29,30,31,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[14,14,-121,-122,-123,-124,14,-112,14,-6,-17,14,52,61,-111,52,-7,14,-18,-64,-105,-104,-88,52,-78,52,52,52,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,100,-119,14,52,-62,-88,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-27,52,52,-86,-87,-79,52,-80,-81,-120,52,-97,-98,-99,-100,-101,-102,52,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,52,52,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,52,-93,52,-85,52,-63,-24,-61,52,52,52,-44,-46,-48,52,52,-89,-28,-83,-84,52,52,52,-45,-47,52,52,52,52,52,-50,-29,-31,52,52,52,52,52,-49,-51,52,52,52,52,-39,52,52,52,-43,-30,52,52,-38,-35,52,-37,52,-42,-41,52,-36,-34,-33,-40,-32,]),'LPAREN':([0,5,7,8,9,10,11,12,13,14,15,17,21,22,23,24,26,29,30,31,33,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,97,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[15,15,-121,-122,-123,-124,15,25,-112,-113,15,-6,-17,15,25,43,-111,43,-7,15,-18,-116,-64,-105,-104,-88,43,90,94,94,43,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,15,-114,43,-62,-88,43,-115,43,43,43,43,43,43,43,43,43,43,43,43,43,-27,43,43,-86,-87,-79,43,-80,-81,-117,-118,43,-97,-98,-99,-100,-101,-102,43,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,157,158,159,43,43,165,166,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,43,-93,43,-85,43,-63,-24,-61,43,43,43,-44,-46,-48,43,43,-89,-28,-83,-84,43,43,43,-45,-47,43,43,43,43,43,-50,-29,-31,43,43,43,43,43,-49,-51,43,43,43,43,-39,43,43,43,-43,-30,43,43,-38,-35,43,-37,43,-42,-41,43,-36,-34,-33,-40,-32,]),'$end':([1,2,3,4,17,30,32,64,155,],[0,-1,-2,-3,-6,-7,-5,-4,-24,]),'SEMI':([5,7,8,9,10,12,14,16,17,18,19,22,23,30,35,37,39,42,44,48,52,53,54,55,56,57,63,65,66,68,69,70,72,88,91,92,93,95,96,97,99,126,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,152,154,159,161,163,167,168,169,170,172,176,177,178,182,187,189,190,192,194,197,],[17,-121,-122,-123,-124,-20,-113,-10,-6,30,-8,17,-19,-7,-10,-116,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-114,-11,-12,-62,-88,-9,-115,-27,-86,-87,-79,-80,-81,-117,-118,160,162,164,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-13,-63,177,179,180,-89,-28,-83,-84,-14,187,188,191,193,198,201,202,205,206,208,]),'RPAREN':([7,8,9,10,12,14,23,27,37,39,42,44,48,52,53,54,55,56,57,58,59,60,61,63,68,69,72,86,87,88,90,91,92,93,95,96,97,99,100,101,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,150,151,154,165,167,168,169,170,174,175,181,183,184,188,191,198,199,201,202,203,208,209,213,215,220,],[-121,-122,-123,-124,-20,-113,-19,63,-116,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,97,99,-21,-119,-114,-62,-88,-115,144,145,-27,149,-86,-87,-79,-80,-81,-117,-118,-120,-23,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,170,-85,-94,-22,-63,182,-89,-28,-83,-84,185,186,192,194,-95,200,204,210,211,214,216,217,221,222,225,227,230,]),'EQUALS':([12,14,16,23,35,37,42,44,48,52,53,54,55,56,57,63,69,72,91,92,93,95,96,97,99,145,149,167,169,170,],[-20,-113,29,-19,29,-116,-88,-78,-82,-90,-91,-92,-108,-109,-110,-114,105,-115,-86,-87,-79,-80,-81,-117,-118,-93,-85,-89,-83,-84,]),'COMMA':([12,14,16,18,19,23,35,37,39,42,44,48,52,53,54,55,56,57,58,60,63,65,66,68,69,70,72,87,88,91,92,93,95,96,97,99,101,102,103,121,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,148,149,150,151,152,154,161,163,167,168,169,170,172,173,174,175,176,181,183,184,189,190,197,199,203,209,213,215,220,],[-20,-113,-10,31,-8,-19,-10,-116,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,98,-21,-114,-11,-12,-62,-88,-9,-115,146,-27,-86,-87,-79,-80,-81,-117,-118,-23,153,-15,146,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,146,171,-85,-94,-22,-13,-63,146,146,-89,-28,-83,-84,-14,-16,146,146,146,146,171,-95,146,146,146,146,146,146,146,146,146,]),'LBRACKET':([12,14,23,37,44,48,52,53,54,55,56,57,63,72,91,92,97,99,145,149,169,170,],[24,-113,24,-116,89,-82,-90,-91,-92,-108,-109,-110,-114,-115,-86,-87,-117,-118,-93,-85,-83,-84,]),'LBRACE':([17,20,21,28,29,30,33,39,42,44,48,52,53,54,55,56,57,67,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,153,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,34,-17,34,67,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,67,-62,-88,34,-27,-86,-87,-79,-80,-81,34,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,67,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,34,34,-50,-29,-31,34,34,-49,-51,34,34,34,-39,34,34,34,-43,-30,34,34,-38,-35,34,-37,34,-42,-41,34,-36,-34,-33,-40,-32,]),'IF':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,123,-27,-86,-87,-79,-80,-81,123,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,123,123,-50,-29,-31,123,123,-49,-51,123,123,123,-39,123,123,123,-43,-30,123,123,-38,-35,123,-37,123,-42,-41,123,-36,-34,-33,-40,-32,]),'WHILE':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,124,-27,-86,-87,-79,-80,-81,124,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,124,124,-50,-29,-31,124,124,-49,-51,124,124,124,-39,124,124,124,-43,-30,124,124,-38,-35,124,-37,124,-42,-41,124,-36,-34,-33,-40,-32,]),'FOR':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,125,-27,-86,-87,-79,-80,-81,125,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,125,125,-50,-29,-31,125,125,-49,-51,125,125,125,-39,125,125,125,-43,-30,125,125,-38,-35,125,-37,125,-42,-41,125,-36,-34,-33,-40,-32,]),'BREAK':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,126,-27,-86,-87,-79,-80,-81,126,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,126,126,-50,-29,-31,126,126,-49,-51,126,126,126,-39,126,126,126,-43,-30,126,126,-38,-35,126,-37,126,-42,-41,126,-36,-34,-33,-40,-32,]),'RETURN':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,127,-27,-86,-87,-79,-80,-81,127,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,127,127,-50,-29,-31,127,127,-49,-51,127,127,127,-39,127,127,127,-43,-30,127,127,-38,-35,127,-37,127,-42,-41,127,-36,-34,-33,-40,-32,]),'ASSERT':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,128,-27,-86,-87,-79,-80,-81,128,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,128,128,-50,-29,-31,128,128,-49,-51,128,128,128,-39,128,128,128,-43,-30,128,128,-38,-35,128,-37,128,-42,-41,128,-36,-34,-33,-40,-32,]),'PRINT':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,129,-27,-86,-87,-79,-80,-81,129,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,129,129,-50,-29,-31,129,129,-49,-51,129,129,129,-39,129,129,129,-43,-30,129,129,-38,-35,129,-37,129,-42,-41,129,-36,-34,-33,-40,-32,]),'READ':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,68,69,71,88,91,92,93,95,96,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,156,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,130,-27,-86,-87,-79,-80,-81,130,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-45,-47,130,130,-50,-29,-31,130,130,-49,-51,130,130,130,-39,130,130,130,-43,-30,130,130,-38,-35,130,-37,130,-42,-41,130,-36,-34,-33,-40,-32,]),'INCREASE':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,45,45,-7,-18,-64,-105,-104,-88,45,91,45,45,45,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,45,-62,-88,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-27,45,45,-86,-87,-79,45,-80,-81,45,-97,-98,-99,-100,-101,-102,45,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,45,45,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,45,-93,45,-85,45,-63,-24,-61,45,45,45,-44,-46,-48,45,45,-89,-28,-83,-84,45,45,45,-45,-47,45,45,45,45,45,-50,-29,-31,45,45,45,45,45,-49,-51,45,45,45,45,-39,45,45,45,-43,-30,45,45,-38,-35,45,-37,45,-42,-41,45,-36,-34,-33,-40,-32,]),'DECREASE':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,46,46,-7,-18,-64,-105,-104,-88,46,92,46,46,46,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,46,-62,-88,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-27,46,46,-86,-87,-79,46,-80,-81,46,-97,-98,-99,-100,-101,-102,46,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,46,46,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,46,-93,46,-85,46,-63,-24,-61,46,46,46,-44,-46,-48,46,46,-89,-28,-83,-84,46,46,46,-45,-47,46,46,46,46,46,-50,-29,-31,46,46,46,46,46,-49,-51,46,46,46,46,-39,46,46,46,-43,-30,46,46,-38,-35,46,-37,46,-42,-41,46,-36,-34,-33,-40,-32,]),'ADDRESS':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,49,49,-7,-18,-64,-105,-104,-88,49,-78,49,49,49,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,49,-62,-88,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-27,49,49,-86,-87,-79,49,-80,-81,49,-97,-98,-99,-100,-101,-102,49,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,49,49,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,49,-93,49,-85,49,-63,-24,-61,49,49,49,-44,-46,-48,49,49,-89,-28,-83,-84,49,49,49,-45,-47,49,49,49,49,49,-50,-29,-31,49,49,49,49,49,-49,-51,49,49,49,49,-39,49,49,49,-43,-30,49,49,-38,-35,49,-37,49,-42,-41,49,-36,-34,-33,-40,-32,]),'PLUS':([17,21,24,29,30,33,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,40,40,-7,-18,73,-64,-105,-104,-88,40,-78,40,40,40,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,40,73,-88,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-27,40,40,-86,-87,-79,40,-80,-81,40,-97,-98,-99,-100,-101,-102,40,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,40,40,-65,-66,-67,-68,-69,73,73,73,73,73,73,73,73,40,-93,40,-85,40,-63,-24,-61,40,40,40,-44,-46,-48,40,40,-89,-28,-83,-84,40,40,40,-45,-47,40,40,40,40,40,-50,-29,-31,40,40,40,40,40,-49,-51,40,40,40,40,-39,40,40,40,-43,-30,40,40,-38,-35,40,-37,40,-42,-41,40,-36,-34,-33,-40,-32,]),'UMINUS':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,50,50,-7,-18,-64,-105,-104,-88,50,-78,50,50,50,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,50,-62,-88,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-27,50,50,-86,-87,-79,50,-80,-81,50,-97,-98,-99,-100,-101,-102,50,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,50,50,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,50,-93,50,-85,50,-63,-24,-61,50,50,50,-44,-46,-48,50,50,-89,-28,-83,-84,50,50,50,-45,-47,50,50,50,50,50,-50,-29,-31,50,50,50,50,50,-49,-51,50,50,50,50,-39,50,50,50,-43,-30,50,50,-38,-35,50,-37,50,-42,-41,50,-36,-34,-33,-40,-32,]),'NOT':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,51,51,-7,-18,-64,-105,-104,-88,51,-78,51,51,51,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,51,-62,-88,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-27,51,51,-86,-87,-79,51,-80,-81,51,-97,-98,-99,-100,-101,-102,51,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,51,51,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,51,-93,51,-85,51,-63,-24,-61,51,51,51,-44,-46,-48,51,51,-89,-28,-83,-84,51,51,51,-45,-47,51,51,51,51,51,-50,-29,-31,51,51,51,51,51,-49,-51,51,51,51,51,-39,51,51,51,-43,-30,51,51,-38,-35,51,-37,51,-42,-41,51,-36,-34,-33,-40,-32,]),'STRING':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,54,54,-7,-18,-64,-105,-104,-88,54,-78,54,54,54,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,54,-62,-88,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-27,54,54,-86,-87,-79,54,-80,-81,54,-97,-98,-99,-100,-101,-102,54,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,54,54,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,54,-93,54,-85,54,-63,-24,-61,54,54,54,-44,-46,-48,54,54,-89,-28,-83,-84,54,54,54,-45,-47,54,54,54,54,54,-50,-29,-31,54,54,54,54,54,-49,-51,54,54,54,54,-39,54,54,54,-43,-30,54,54,-38,-35,54,-37,54,-42,-41,54,-36,-34,-33,-40,-32,]),'INT_CONST':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,55,55,-7,-18,-64,-105,-104,-88,55,-78,55,55,55,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,55,-62,-88,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-27,55,55,-86,-87,-79,55,-80,-81,55,-97,-98,-99,-100,-101,-102,55,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,55,55,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,55,-93,55,-85,55,-63,-24,-61,55,55,55,-44,-46,-48,55,55,-89,-28,-83,-84,55,55,55,-45,-47,55,55,55,55,55,-50,-29,-31,55,55,55,55,55,-49,-51,55,55,55,55,-39,55,55,55,-43,-30,55,55,-38,-35,55,-37,55,-42,-41,55,-36,-34,-33,-40,-32,]),'FLOAT_CONST':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,56,56,-7,-18,-64,-105,-104,-88,56,-78,56,56,56,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,56,-62,-88,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-27,56,56,-86,-87,-79,56,-80,-81,56,-97,-98,-99,-100,-101,-102,56,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,56,56,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,56,-93,56,-85,56,-63,-24,-61,56,56,56,-44,-46,-48,56,56,-89,-28,-83,-84,56,56,56,-45,-47,56,56,56,56,56,-50,-29,-31,56,56,56,56,56,-49,-51,56,56,56,56,-39,56,56,56,-43,-30,56,56,-38,-35,56,-37,56,-42,-41,56,-36,-34,-33,-40,-32,]),'CHAR_CONST':([17,21,24,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,177,178,179,180,185,186,187,188,191,193,195,196,198,200,201,202,204,205,206,207,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,57,57,-7,-18,-64,-105,-104,-88,57,-78,57,57,57,-82,-103,-106,-107,-90,-91,-92,-108,-109,-110,57,-62,-88,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-27,57,57,-86,-87,-79,57,-80,-81,57,-97,-98,-99,-100,-101,-102,57,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,57,57,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,57,-93,57,-85,57,-63,-24,-61,57,57,57,-44,-46,-48,57,57,-89,-28,-83,-84,57,57,57,-45,-47,57,57,57,57,57,-50,-29,-31,57,57,57,57,57,-49,-51,57,57,57,57,-39,57,57,57,-43,-30,57,57,-38,-35,57,-37,57,-42,-41,57,-36,-34,-33,-40,-32,]),'RBRACE':([17,21,30,33,39,42,44,48,52,53,54,55,56,57,66,68,69,71,88,91,92,93,95,96,102,103,111,112,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,152,153,154,155,156,160,162,164,167,168,169,170,172,173,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-6,-17,-7,-18,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-12,-62,-88,-125,-27,-86,-87,-79,-80,-81,152,-15,155,-60,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-13,172,-63,-24,-61,-44,-46,-48,-89,-28,-83,-84,-14,-16,-45,-47,-125,-125,-50,-29,-31,-125,-125,-49,-51,-125,-125,-125,-39,-125,-125,-125,-43,-30,-125,-125,-38,-35,-125,-37,-125,-42,-41,-125,-36,-34,-33,-40,-32,]),'RBRACKET':([24,36,38,39,42,44,48,52,53,54,55,56,57,68,69,88,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,149,154,167,168,169,170,],[37,72,-96,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,-27,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,169,-85,-63,-89,-28,-83,-84,]),'MINUS':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[74,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,74,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,74,74,74,74,74,74,74,74,-93,-85,-89,-83,-84,]),'DIVIDE':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[76,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,76,-88,-86,-87,-79,-80,-81,76,76,-67,-68,-69,76,76,76,76,76,76,76,76,-93,-85,-89,-83,-84,]),'MOD':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[77,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,77,-88,-86,-87,-79,-80,-81,77,77,-67,-68,-69,77,77,77,77,77,77,77,77,-93,-85,-89,-83,-84,]),'LT':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[78,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,78,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'LE':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[79,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,79,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'GT':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[80,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,80,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'GE':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[81,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,81,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'EQ':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[82,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,82,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'NQ':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[83,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,83,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'AND':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[84,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,84,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'OR':([38,39,42,44,48,52,53,54,55,56,57,68,69,91,92,93,95,96,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,167,169,170,],[85,-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,85,-88,-86,-87,-79,-80,-81,-65,-66,-67,-68,-69,None,None,None,None,None,None,None,None,-93,-85,-89,-83,-84,]),'ELSE':([39,42,44,48,52,53,54,55,56,57,68,69,88,91,92,93,95,96,113,114,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,154,155,160,162,164,167,168,169,170,179,180,185,186,193,195,196,200,204,205,206,207,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,],[-64,-88,-78,-82,-90,-91,-92,-108,-109,-110,-62,-88,-27,-86,-87,-79,-80,-81,-52,-53,-54,-55,-56,-57,-58,-59,-25,-26,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-93,-85,-63,-24,-44,-46,-48,-89,-28,-83,-84,-45,-47,-125,-125,-50,207,-31,-125,-125,-49,-51,-125,-125,-125,-39,-125,-125,-125,-43,-30,-125,-125,-38,-35,-125,-37,-125,-42,-41,-125,-36,-34,-33,-40,-32,]),'EQTIMES':([42,44,48,52,53,54,55,56,57,69,91,92,93,95,96,145,149,167,169,170,],[-88,-78,-82,-90,-91,-92,-108,-109,-110,106,-86,-87,-79,-80,-81,-93,-85,-89,-83,-84,]),'EQDIV':([42,44,48,52,53,54,55,56,57,69,91,92,93,95,96,145,149,167,169,170,],[-88,-78,-82,-90,-91,-92,-108,-109,-110,107,-86,-87,-79,-80,-81,-93,-85,-89,-83,-84,]),'EQMOD':([42,44,48,52,53,54,55,56,57,69,91,92,93,95,96,145,149,167,169,170,],[-88,-78,-82,-90,-91,-92,-108,-109,-110,108,-86,-87,-79,-80,-81,-93,-85,-89,-83,-84,]),'EQPLUS':([42,44,48,52,53,54,55,56,57,69,91,92,93,95,96,145,149,167,169,170,],[-88,-78,-82,-90,-91,-92,-108,-109,-110,109,-86,-87,-79,-80,-81,-93,-85,-89,-83,-84,]),'EQMINUS':([42,44,48,52,53,54,55,56,57,69,91,92,93,95,96,145,149,167,169,170,],[-88,-78,-82,-90,-91,-92,-108,-109,-110,110,-86,-87,-79,-80,-81,-93,-85,-89,-83,-84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration':([0,],[2,]),'function_definition':([0,],[3,]),'declaration':([0,6,16,20,28,34,71,159,],[4,21,21,33,33,21,33,178,]),'type_specifier':([0,6,16,20,25,28,34,43,71,98,159,],[5,22,22,22,62,22,22,86,22,62,22,]),'declarator':([0,5,15,22,31,62,],[6,16,27,35,35,101,]),'pointer':([0,5,13,15,22,31,62,],[11,11,26,11,11,11,11,]),'direct_declarator':([0,5,11,15,22,31,62,],[12,12,23,12,12,12,12,]),'init_declarator_list':([5,22,],[18,18,]),'init_declarator':([5,22,31,],[19,19,70,]),'declaration_list':([6,16,34,],[20,28,71,]),'compound_statement':([20,28,71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[32,64,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'constant_expression':([24,],[36,]),'binary_expression':([24,29,43,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[38,68,68,68,68,131,132,133,134,135,136,137,138,139,140,141,142,143,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'cast_expression':([24,29,43,47,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,144,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[39,39,39,96,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,167,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'unary_expression':([24,29,43,45,46,47,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,144,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[42,69,69,93,95,42,69,69,42,42,42,42,42,42,42,42,42,42,42,42,42,69,69,69,69,69,69,69,42,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'postfix_expression':([24,29,43,45,46,47,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,144,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'unary_operator':([24,29,43,45,46,47,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,144,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'primary_expression':([24,29,43,45,46,47,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,144,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'constant':([24,29,43,45,46,47,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,94,104,111,127,128,144,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'parameter_list':([25,],[58,]),'id_list':([25,],[59,]),'parameter_declaration':([25,98,],[60,151,]),'initializer':([29,67,153,],[65,103,173,]),'assignment_expression':([29,43,67,71,89,90,94,104,111,127,128,146,153,157,158,159,165,166,171,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[66,88,66,88,88,150,88,154,88,88,88,168,66,88,88,88,88,150,184,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'expression':([43,71,89,94,111,127,128,157,158,159,165,177,178,185,186,187,188,191,198,200,201,202,204,207,208,210,211,214,216,217,221,222,225,227,230,],[87,121,147,87,121,161,163,174,175,176,181,189,190,121,121,197,199,203,209,121,213,215,121,121,220,121,121,121,121,121,121,121,121,121,121,]),'initializer_list':([67,],[102,]),'assignment_operator':([69,],[104,]),'statement_list':([71,],[111,]),'statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[112,156,195,196,212,218,219,223,224,226,228,229,231,232,233,234,235,]),'expression_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'selection_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'iteration_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'jump_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'assert_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'print_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'read_statement':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'empty':([71,111,185,186,200,204,207,210,211,214,216,217,221,222,225,227,230,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'argument_expression':([90,166,],[148,183,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration','program',1,'p_program','uc_parser2.py',72),
  ('global_declaration -> function_definition','global_declaration',1,'p_global_declaraion','uc_parser2.py',76),
  ('global_declaration -> declaration','global_declaration',1,'p_global_declaraion','uc_parser2.py',77),
  ('function_definition -> type_specifier declarator declaration_list compound_statement','function_definition',4,'p_function_definition','uc_parser2.py',81),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','uc_parser2.py',82),
  ('declaration -> type_specifier SEMI','declaration',2,'p_declaration','uc_parser2.py',86),
  ('declaration -> type_specifier init_declarator_list SEMI','declaration',3,'p_declaration','uc_parser2.py',87),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','uc_parser2.py',91),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','uc_parser2.py',92),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','uc_parser2.py',96),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','uc_parser2.py',97),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','uc_parser2.py',101),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','uc_parser2.py',102),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','uc_parser2.py',103),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','uc_parser2.py',107),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','uc_parser2.py',108),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','uc_parser2.py',112),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','uc_parser2.py',113),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','uc_parser2.py',117),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','uc_parser2.py',118),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','uc_parser2.py',122),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','uc_parser2.py',123),
  ('parameter_declaration -> type_specifier declarator','parameter_declaration',2,'p_parameter_declaration','uc_parser2.py',127),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','uc_parser2.py',131),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','uc_parser2.py',135),
  ('expression_statement -> empty','expression_statement',1,'p_expression_statement','uc_parser2.py',136),
  ('expression -> assignment_expression','expression',1,'p_expression','uc_parser2.py',140),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','uc_parser2.py',141),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','uc_parser2.py',145),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','uc_parser2.py',146),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','uc_parser2.py',150),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement','iteration_statement',9,'p_iteration_statement','uc_parser2.py',151),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',152),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',153),
  ('iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',154),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',155),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',156),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',157),
  ('iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement','iteration_statement',6,'p_iteration_statement','uc_parser2.py',158),
  ('iteration_statement -> FOR LPAREN declaration expression SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',159),
  ('iteration_statement -> FOR LPAREN declaration SEMI expression RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',160),
  ('iteration_statement -> FOR LPAREN declaration expression SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',161),
  ('iteration_statement -> FOR LPAREN declaration SEMI RPAREN statement','iteration_statement',6,'p_iteration_statement','uc_parser2.py',162),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','uc_parser2.py',166),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement','uc_parser2.py',167),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement','uc_parser2.py',168),
  ('assert_statement -> ASSERT expression SEMI','assert_statement',3,'p_assert_statement','uc_parser2.py',172),
  ('assert_statement -> ASSERT SEMI','assert_statement',2,'p_assert_statement','uc_parser2.py',173),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMI','print_statement',5,'p_print_statement','uc_parser2.py',177),
  ('print_statement -> PRINT LPAREN RPAREN SEMI','print_statement',4,'p_print_statement','uc_parser2.py',178),
  ('read_statement -> READ LPAREN argument_expression RPAREN SEMI','read_statement',5,'p_read_statement','uc_parser2.py',182),
  ('statement -> expression_statement','statement',1,'p_statement','uc_parser2.py',186),
  ('statement -> compound_statement','statement',1,'p_statement','uc_parser2.py',187),
  ('statement -> selection_statement','statement',1,'p_statement','uc_parser2.py',188),
  ('statement -> iteration_statement','statement',1,'p_statement','uc_parser2.py',189),
  ('statement -> jump_statement','statement',1,'p_statement','uc_parser2.py',190),
  ('statement -> assert_statement','statement',1,'p_statement','uc_parser2.py',191),
  ('statement -> print_statement','statement',1,'p_statement','uc_parser2.py',192),
  ('statement -> read_statement','statement',1,'p_statement','uc_parser2.py',193),
  ('statement_list -> statement','statement_list',1,'p_statement_list','uc_parser2.py',197),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','uc_parser2.py',198),
  ('assignment_expression -> binary_expression','assignment_expression',1,'p_assignment_expression','uc_parser2.py',202),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','uc_parser2.py',203),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','uc_parser2.py',207),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',208),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',209),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',210),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',211),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',212),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',213),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',214),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',215),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',216),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',217),
  ('binary_expression -> binary_expression NQ binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',218),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',219),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',220),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','uc_parser2.py',224),
  ('unary_expression -> INCREASE unary_expression','unary_expression',2,'p_unary_expression','uc_parser2.py',225),
  ('unary_expression -> DECREASE unary_expression','unary_expression',2,'p_unary_expression','uc_parser2.py',226),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','uc_parser2.py',227),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','uc_parser2.py',231),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','uc_parser2.py',232),
  ('postfix_expression -> postfix_expression LPAREN argument_expression RPAREN','postfix_expression',4,'p_postfix_expression','uc_parser2.py',233),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','uc_parser2.py',234),
  ('postfix_expression -> postfix_expression INCREASE','postfix_expression',2,'p_postfix_expression','uc_parser2.py',235),
  ('postfix_expression -> postfix_expression DECREASE','postfix_expression',2,'p_postfix_expression','uc_parser2.py',236),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','uc_parser2.py',240),
  ('cast_expression -> LPAREN type_specifier RPAREN cast_expression','cast_expression',4,'p_cast_expression','uc_parser2.py',241),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','uc_parser2.py',245),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','uc_parser2.py',246),
  ('primary_expression -> STRING','primary_expression',1,'p_primary_expression','uc_parser2.py',247),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','uc_parser2.py',248),
  ('argument_expression -> assignment_expression','argument_expression',1,'p_argument_expression','uc_parser2.py',252),
  ('argument_expression -> argument_expression COMMA assignment_expression','argument_expression',3,'p_argument_expression','uc_parser2.py',253),
  ('constant_expression -> binary_expression','constant_expression',1,'p_constant_expression','uc_parser2.py',257),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','uc_parser2.py',261),
  ('assignment_operator -> EQTIMES','assignment_operator',1,'p_assignment_operator','uc_parser2.py',262),
  ('assignment_operator -> EQDIV','assignment_operator',1,'p_assignment_operator','uc_parser2.py',263),
  ('assignment_operator -> EQMOD','assignment_operator',1,'p_assignment_operator','uc_parser2.py',264),
  ('assignment_operator -> EQPLUS','assignment_operator',1,'p_assignment_operator','uc_parser2.py',265),
  ('assignment_operator -> EQMINUS','assignment_operator',1,'p_assignment_operator','uc_parser2.py',266),
  ('unary_operator -> ADDRESS','unary_operator',1,'p_unary_operator','uc_parser2.py',270),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','uc_parser2.py',271),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','uc_parser2.py',272),
  ('unary_operator -> UMINUS','unary_operator',1,'p_unary_operator','uc_parser2.py',273),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','uc_parser2.py',274),
  ('constant -> INT_CONST','constant',1,'p_constant','uc_parser2.py',278),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','uc_parser2.py',279),
  ('constant -> CHAR_CONST','constant',1,'p_constant','uc_parser2.py',280),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','uc_parser2.py',284),
  ('pointer -> TIMES','pointer',1,'p_pointer','uc_parser2.py',285),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','uc_parser2.py',289),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','uc_parser2.py',290),
  ('direct_declarator -> direct_declarator LBRACKET constant_expression RBRACKET','direct_declarator',4,'p_direct_declarator','uc_parser2.py',291),
  ('direct_declarator -> direct_declarator LBRACKET RBRACKET','direct_declarator',3,'p_direct_declarator','uc_parser2.py',292),
  ('direct_declarator -> direct_declarator LPAREN parameter_list RPAREN','direct_declarator',4,'p_direct_declarator','uc_parser2.py',293),
  ('direct_declarator -> direct_declarator LPAREN id_list RPAREN','direct_declarator',4,'p_direct_declarator','uc_parser2.py',294),
  ('id_list -> ID','id_list',1,'p_id_list','uc_parser2.py',298),
  ('id_list -> id_list ID','id_list',2,'p_id_list','uc_parser2.py',299),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','uc_parser2.py',303),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','uc_parser2.py',304),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','uc_parser2.py',305),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','uc_parser2.py',306),
  ('empty -> <empty>','empty',0,'p_empty','uc_parser2.py',312),
]
