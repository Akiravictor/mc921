
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTLEGEEQNQNOTANDORleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSADDRESS AND ASSERT BREAK CHAR CHAR_CONST COMMA DECREASE DIVIDE ELSE EQ EQDIV EQMINUS EQMOD EQPLUS EQTIMES EQUALS FLOAT FLOAT_CONST FOR GE GT ID IF INCREASE INT INT_CONST LBRACE LBRACKET LE LPAREN LT MINUS MOD NOT NQ OR PLUS PRINT RBRACE RBRACKET READ RETURN RPAREN SEMI STRING TIMES UMINUS VOID WHILE program : global_declaration\n         global_declaration : function_definition\n                               | declaration\n         function_definition : type_specifier declarator declaration_list compound_statement\n                                | declarator declaration_list compound_statement\n         init_declarator_list : init_declarator\n                                 | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         initializer : assignment_expression\n                        | LBRACE initializer_list RBRACE\n                        | LBRACE initializer_list COMMA RBRACE\n         initializer_list : initializer\n                             | initializer_list COMMA initializer\n         declaration : type_specifier SEMI\n                        | type_specifier init_declarator_list SEMI\n         declaration_list : declaration\n                             | declaration_list declaration\n                             | empty\n         declarator : pointer direct_declarator\n                       | direct_declarator\n         parameter_list : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration : type_specifier declarator\n         compound_statement : LBRACE declaration_list statement_list RBRACE\n         expression_statement : expression\n                                 | empty SEMI\n         expression : assignment_expression\n                       | expression COMMA assignment_expression\n         selection_statement : IF LPAREN expression RPAREN statement\n                                | IF LPAREN expression RPAREN statement ELSE statement\n         iteration_statement : WHILE LPAREN expression RPAREN statement\n                                | FOR LPAREN expression SEMI expression SEMI expression RPAREN statement\n                                | FOR LPAREN SEMI expression SEMI expression RPAREN statement\n                                | FOR LPAREN expression SEMI SEMI expression RPAREN statement\n                                | FOR LPAREN SEMI SEMI expression RPAREN statement\n                                | FOR LPAREN expression SEMI expression SEMI RPAREN statement\n                                | FOR LPAREN SEMI expression SEMI RPAREN statement\n                                | FOR LPAREN expression SEMI SEMI RPAREN statement\n                                | FOR LPAREN SEMI SEMI RPAREN statement\n                                | FOR LPAREN declaration expression SEMI expression RPAREN statement\n                                | FOR LPAREN declaration SEMI expression RPAREN statement\n                                | FOR LPAREN declaration expression SEMI RPAREN statement\n                                | FOR LPAREN declaration SEMI RPAREN statement\n         jump_statement : BREAK SEMI\n                           | RETURN expression SEMI\n                           | RETURN SEMI\n         assert_statement : ASSERT expression SEMI\n                             | ASSERT SEMI\n         print_statement : PRINT LPAREN expression RPAREN SEMI\n                            | PRINT LPAREN RPAREN SEMI\n         read_statement : READ LPAREN argument_expression RPAREN SEMI\n         statement : expression_statement\n                      | compound_statement\n                      | selection_statement\n                      | iteration_statement\n                      | jump_statement\n                      | assert_statement\n                      | print_statement\n                      | read_statement\n         statement_list : statement\n                           | statement_list statement\n                           | empty\n         assignment_expression : binary_expression\n                                  | unary_expression assignment_operator assignment_expression\n         binary_expression : cast_expression\n                              | binary_expression PLUS binary_expression\n                              | binary_expression MINUS binary_expression\n                              | binary_expression TIMES binary_expression\n                              | binary_expression DIVIDE binary_expression\n                              | binary_expression MOD binary_expression\n                              | binary_expression LT binary_expression\n                              | binary_expression LE binary_expression\n                              | binary_expression GT binary_expression\n                              | binary_expression GE binary_expression\n                              | binary_expression EQ binary_expression\n                              | binary_expression NQ binary_expression\n                              | binary_expression AND binary_expression\n                              | binary_expression OR binary_expression\n         unary_expression : postfix_expression\n                             | INCREASE unary_expression\n                             | DECREASE unary_expression\n                             | unary_operator cast_expression\n         postfix_expression : primary_expression\n                               | postfix_expression LBRACKET expression RBRACKET\n                               | postfix_expression LPAREN argument_expression RPAREN\n                               | postfix_expression LPAREN RPAREN\n                               | postfix_expression INCREASE\n                               | postfix_expression DECREASE\n         cast_expression : unary_expression\n                            | LPAREN type_specifier RPAREN cast_expression\n         primary_expression : ID\n                               | constant\n                               | STRING\n                               | LPAREN expression RPAREN\n         argument_expression : assignment_expression\n                                | argument_expression COMMA assignment_expression\n         constant_expression : binary_expression\n         assignment_operator : EQUALS\n                               | EQTIMES\n                               | EQDIV\n                               | EQMOD\n                               | EQPLUS\n                               | EQMINUS\n         unary_operator : ADDRESS\n                           | TIMES\n                           | PLUS\n                           | UMINUS\n                           | NOT\n         constant : INT_CONST\n                     | FLOAT_CONST\n                     | CHAR_CONST\n         pointer : TIMES pointer\n                    | TIMES\n         direct_declarator : ID\n                              | LPAREN declarator RPAREN\n                              | direct_declarator LBRACKET constant_expression RBRACKET\n                              | direct_declarator LBRACKET RBRACKET\n                              | direct_declarator LPAREN parameter_list RPAREN\n                              | direct_declarator LPAREN id_list RPAREN\n         id_list : ID\n                    | id_list ID\n                    | empty\n         type_specifier : VOID\n                           | INT\n                           | FLOAT\n                           | CHAR\n         empty :'
    
_lr_action_items = {'VOID':([0,6,12,14,16,17,20,21,22,24,26,29,31,34,35,38,44,65,73,74,99,100,101,163,],[7,7,-21,-115,7,-15,7,-17,-19,-20,7,7,-16,-18,7,-118,7,-116,7,-117,-119,7,-120,7,]),'INT':([0,6,12,14,16,17,20,21,22,24,26,29,31,34,35,38,44,65,73,74,99,100,101,163,],[8,8,-21,-115,8,-15,8,-17,-19,-20,8,8,-16,-18,8,-118,8,-116,8,-117,-119,8,-120,8,]),'FLOAT':([0,6,12,14,16,17,20,21,22,24,26,29,31,34,35,38,44,65,73,74,99,100,101,163,],[9,9,-21,-115,9,-15,9,-17,-19,-20,9,9,-16,-18,9,-118,9,-116,9,-117,-119,9,-120,9,]),'CHAR':([0,6,12,14,16,17,20,21,22,24,26,29,31,34,35,38,44,65,73,74,99,100,101,163,],[10,10,-21,-115,10,-15,10,-17,-19,-20,10,10,-16,-18,10,-118,10,-116,10,-117,-119,10,-120,10,]),'TIMES':([0,5,7,8,9,10,13,15,17,21,22,23,25,30,31,32,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,96,97,98,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,155,156,157,158,160,161,162,163,164,166,168,169,170,171,172,173,174,175,181,182,183,184,189,190,191,192,195,197,199,200,202,204,205,206,208,209,210,211,212,214,215,216,218,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,],[13,13,-124,-125,-126,-127,13,13,-15,-17,-19,13,42,42,-16,13,-18,-128,77,-66,-107,-106,-90,42,-80,42,42,42,-84,-105,-108,-109,-92,-93,-94,-110,-111,-112,13,42,77,-90,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-28,42,42,-88,-89,-81,42,-82,-83,42,-99,-100,-101,-102,-103,-104,42,-61,-63,-53,-54,-55,-56,-57,-58,-59,-60,-26,42,42,77,77,-69,-70,-71,77,77,77,77,77,77,77,77,42,-95,42,-87,42,-65,-25,-62,-27,42,42,42,-45,-47,-49,42,42,-91,-29,-85,-86,42,42,42,-46,-48,42,42,42,42,42,-51,-30,-32,42,42,42,42,42,-50,-52,42,42,42,42,-40,42,42,42,-44,-31,42,42,-39,-36,42,-38,42,-43,-42,42,-37,-35,-34,-41,-33,]),'ID':([0,5,7,8,9,10,11,13,15,17,21,22,23,25,26,27,30,31,32,34,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,64,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,96,97,98,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,155,156,157,158,160,161,162,163,164,166,168,169,170,171,172,173,174,175,181,182,183,184,189,190,191,192,195,197,199,200,202,204,205,206,208,209,210,211,212,214,215,216,218,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,],[14,14,-124,-125,-126,-127,14,-114,14,-15,-17,-19,14,53,62,-113,53,-16,14,-18,-128,-66,-107,-106,-90,53,-80,53,53,53,-84,-105,-108,-109,-92,-93,-94,-110,-111,-112,102,-121,-123,14,53,-64,-90,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-28,53,53,-88,-89,-81,53,-82,-83,-122,53,-99,-100,-101,-102,-103,-104,53,-61,-63,-53,-54,-55,-56,-57,-58,-59,-60,-26,53,53,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,53,-95,53,-87,53,-65,-25,-62,-27,53,53,53,-45,-47,-49,53,53,-91,-29,-85,-86,53,53,53,-46,-48,53,53,53,53,53,-51,-30,-32,53,53,53,53,53,-50,-52,53,53,53,53,-40,53,53,53,-44,-31,53,53,-39,-36,53,-38,53,-43,-42,53,-37,-35,-34,-41,-33,]),'LPAREN':([0,5,7,8,9,10,11,12,13,14,15,17,21,22,23,24,25,27,30,31,32,34,35,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,65,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,155,156,157,158,160,161,162,163,164,166,168,169,170,171,172,173,174,175,181,182,183,184,189,190,191,192,195,197,199,200,202,204,205,206,208,209,210,211,212,214,215,216,218,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,],[15,15,-124,-125,-126,-127,15,26,-114,-115,15,-15,-17,-19,15,26,44,-113,44,-16,15,-18,-128,-118,-66,-107,-106,-90,44,92,96,96,44,-84,-105,-108,-109,-92,-93,-94,-110,-111,-112,15,-116,44,-64,-90,44,-117,44,44,44,44,44,44,44,44,44,44,44,44,44,-28,44,44,-88,-89,-81,44,-82,-83,-119,-120,44,-99,-100,-101,-102,-103,-104,44,-61,-63,-53,-54,-55,-56,-57,-58,-59,-60,-26,161,162,163,44,44,169,170,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,44,-95,44,-87,44,-65,-25,-62,-27,44,44,44,-45,-47,-49,44,44,-91,-29,-85,-86,44,44,44,-46,-48,44,44,44,44,44,-51,-30,-32,44,44,44,44,44,-50,-52,44,44,44,44,-40,44,44,44,-44,-31,44,44,-39,-36,44,-38,44,-43,-42,44,-37,-35,-34,-41,-33,]),'$endone,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'LE':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[81,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,81,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'GT':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[82,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,82,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'GE':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[83,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,83,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'EQ':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[84,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,84,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'NQ':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[85,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,85,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'AND':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[86,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,86,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'OR':([39,40,43,45,49,53,54,55,56,57,58,70,71,93,94,95,97,98,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,171,173,174,],[87,-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,87,-90,-88,-89,-81,-82,-83,-67,-68,-69,-70,-71,None,None,None,None,None,None,None,None,-95,-87,-91,-85,-86,]),'ELSE':([40,43,45,49,53,54,55,56,57,58,70,71,90,93,94,95,97,98,116,117,118,119,120,121,122,123,124,133,134,135,136,137,138,139,140,141,142,143,144,145,147,151,156,157,160,164,166,168,171,172,173,174,183,184,197,199,200,209,210,216,222,223,227,228,230,232,233,235,236,237,238,239,],[-66,-90,-80,-84,-92,-93,-94,-110,-111,-112,-64,-90,-28,-88,-89,-81,-82,-83,-53,-54,-55,-56,-57,-58,-59,-60,-26,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-95,-87,-65,-25,-27,-45,-47,-49,-91,-29,-85,-86,-46,-48,-51,211,-32,-50,-52,-40,-44,-31,-39,-36,-38,-43,-42,-37,-35,-34,-41,-33,]),'EQTIMES':([43,45,49,53,54,55,56,57,58,71,93,94,95,97,98,147,151,171,173,174,],[-90,-80,-84,-92,-93,-94,-110,-111,-112,108,-88,-89,-81,-82,-83,-95,-87,-91,-85,-86,]),'EQDIV':([43,45,49,53,54,55,56,57,58,71,93,94,95,97,98,147,151,171,173,174,],[-90,-80,-84,-92,-93,-94,-110,-111,-112,109,-88,-89,-81,-82,-83,-95,-87,-91,-85,-86,]),'EQMOD':([43,45,49,53,54,55,56,57,58,71,93,94,95,97,98,147,151,171,173,174,],[-90,-80,-84,-92,-93,-94,-110,-111,-112,110,-88,-89,-81,-82,-83,-95,-87,-91,-85,-86,]),'EQPLUS':([43,45,49,53,54,55,56,57,58,71,93,94,95,97,98,147,151,171,173,174,],[-90,-80,-84,-92,-93,-94,-110,-111,-112,111,-88,-89,-81,-82,-83,-95,-87,-91,-85,-86,]),'EQMINUS':([43,45,49,53,54,55,56,57,58,71,93,94,95,97,98,147,151,171,173,174,],[-90,-80,-84,-92,-93,-94,-110,-111,-112,112,-88,-89,-81,-82,-83,-95,-87,-91,-85,-86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration':([0,],[2,]),'function_definition':([0,],[3,]),'declaration':([0,6,16,20,29,35,73,163,],[4,21,21,34,34,21,34,182,]),'type_specifier':([0,6,16,20,26,29,35,44,73,100,163,],[5,23,23,23,64,23,23,88,23,64,23,]),'declarator':([0,5,15,23,32,64,],[6,16,28,36,36,103,]),'pointer':([0,5,13,15,23,32,64,],[11,11,27,11,11,11,11,]),'direct_declarator':([0,5,11,15,23,32,64,],[12,12,24,12,12,12,12,]),'init_declarator_list':([5,23,],[18,18,]),'init_declarator':([5,23,32,],[19,19,72,]),'declaration_list':([6,16,35,],[20,29,73,]),'empty':([6,16,26,35,73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[22,22,63,22,115,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'compound_statement':([20,29,73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[33,66,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'constant_expression':([25,],[37,]),'binary_expression':([25,30,44,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[39,70,70,70,70,133,134,135,136,137,138,139,140,141,142,143,144,145,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'cast_expression':([25,30,44,48,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,146,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[40,40,40,98,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,171,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'unary_expression':([25,30,44,46,47,48,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,146,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[43,71,71,95,97,43,71,71,43,43,43,43,43,43,43,43,43,43,43,43,43,71,71,71,71,71,71,71,43,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'postfix_expression':([25,30,44,46,47,48,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,146,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'unary_operator':([25,30,44,46,47,48,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,146,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'primary_expression':([25,30,44,46,47,48,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,146,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'constant':([25,30,44,46,47,48,69,73,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,96,106,113,129,130,146,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'parameter_list':([26,],[59,]),'id_list':([26,],[60,]),'parameter_declaration':([26,100,],[61,153,]),'initializer':([30,69,155,],[67,105,177,]),'assignment_expression':([30,44,69,73,91,92,96,106,113,129,130,148,155,161,162,163,169,170,175,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[68,90,68,90,90,152,90,156,90,90,90,172,68,90,90,90,90,152,188,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'expression':([44,73,91,96,113,129,130,161,162,163,169,181,182,189,190,191,192,195,202,204,205,206,208,211,212,214,215,218,220,221,225,226,229,231,234,],[89,124,149,89,124,165,167,178,179,180,185,193,194,124,124,201,203,207,213,124,217,219,124,124,224,124,124,124,124,124,124,124,124,124,124,]),'initializer_list':([69,],[104,]),'assignment_operator':([71,],[106,]),'statement_list':([73,],[113,]),'statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[114,158,199,200,216,222,223,227,228,230,232,233,235,236,237,238,239,]),'expression_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'selection_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'iteration_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'jump_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'assert_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'print_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'read_statement':([73,113,189,190,204,208,211,214,215,218,220,221,225,226,229,231,234,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'argument_expression':([92,170,],[150,187,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration','program',1,'p_program','uc_parser2.py',24),
  ('global_declaration -> function_definition','global_declaration',1,'p_global_declaraion','uc_parser2.py',29),
  ('global_declaration -> declaration','global_declaration',1,'p_global_declaraion','uc_parser2.py',30),
  ('function_definition -> type_specifier declarator declaration_list compound_statement','function_definition',4,'p_function_definition','uc_parser2.py',35),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','uc_parser2.py',36),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','uc_parser2.py',44),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','uc_parser2.py',45),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','uc_parser2.py',53),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','uc_parser2.py',54),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','uc_parser2.py',62),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','uc_parser2.py',63),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','uc_parser2.py',64),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','uc_parser2.py',69),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','uc_parser2.py',70),
  ('declaration -> type_specifier SEMI','declaration',2,'p_declaration','uc_parser2.py',78),
  ('declaration -> type_specifier init_declarator_list SEMI','declaration',3,'p_declaration','uc_parser2.py',79),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','uc_parser2.py',84),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','uc_parser2.py',85),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','uc_parser2.py',86),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','uc_parser2.py',94),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','uc_parser2.py',95),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','uc_parser2.py',103),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','uc_parser2.py',104),
  ('parameter_declaration -> type_specifier declarator','parameter_declaration',2,'p_parameter_declaration','uc_parser2.py',112),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','uc_parser2.py',117),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','uc_parser2.py',122),
  ('expression_statement -> empty SEMI','expression_statement',2,'p_expression_statement','uc_parser2.py',123),
  ('expression -> assignment_expression','expression',1,'p_expression','uc_parser2.py',128),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','uc_parser2.py',129),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','uc_parser2.py',137),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','uc_parser2.py',138),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','uc_parser2.py',146),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement','iteration_statement',9,'p_iteration_statement','uc_parser2.py',147),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',148),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',149),
  ('iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',150),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',151),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',152),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',153),
  ('iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement','iteration_statement',6,'p_iteration_statement','uc_parser2.py',154),
  ('iteration_statement -> FOR LPAREN declaration expression SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser2.py',155),
  ('iteration_statement -> FOR LPAREN declaration SEMI expression RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',156),
  ('iteration_statement -> FOR LPAREN declaration expression SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser2.py',157),
  ('iteration_statement -> FOR LPAREN declaration SEMI RPAREN statement','iteration_statement',6,'p_iteration_statement','uc_parser2.py',158),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','uc_parser2.py',162),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement','uc_parser2.py',163),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement','uc_parser2.py',164),
  ('assert_statement -> ASSERT expression SEMI','assert_statement',3,'p_assert_statement','uc_parser2.py',168),
  ('assert_statement -> ASSERT SEMI','assert_statement',2,'p_assert_statement','uc_parser2.py',169),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMI','print_statement',5,'p_print_statement','uc_parser2.py',177),
  ('print_statement -> PRINT LPAREN RPAREN SEMI','print_statement',4,'p_print_statement','uc_parser2.py',178),
  ('read_statement -> READ LPAREN argument_expression RPAREN SEMI','read_statement',5,'p_read_statement','uc_parser2.py',183),
  ('statement -> expression_statement','statement',1,'p_statement','uc_parser2.py',188),
  ('statement -> compound_statement','statement',1,'p_statement','uc_parser2.py',189),
  ('statement -> selection_statement','statement',1,'p_statement','uc_parser2.py',190),
  ('statement -> iteration_statement','statement',1,'p_statement','uc_parser2.py',191),
  ('statement -> jump_statement','statement',1,'p_statement','uc_parser2.py',192),
  ('statement -> assert_statement','statement',1,'p_statement','uc_parser2.py',193),
  ('statement -> print_statement','statement',1,'p_statement','uc_parser2.py',194),
  ('statement -> read_statement','statement',1,'p_statement','uc_parser2.py',195),
  ('statement_list -> statement','statement_list',1,'p_statement_list','uc_parser2.py',200),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','uc_parser2.py',201),
  ('statement_list -> empty','statement_list',1,'p_statement_list','uc_parser2.py',202),
  ('assignment_expression -> binary_expression','assignment_expression',1,'p_assignment_expression','uc_parser2.py',210),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','uc_parser2.py',211),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','uc_parser2.py',219),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',220),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',221),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',222),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',223),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',224),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',225),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',226),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',227),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',228),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',229),
  ('binary_expression -> binary_expression NQ binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',230),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',231),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','uc_parser2.py',232),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','uc_parser2.py',276),
  ('unary_expression -> INCREASE unary_expression','unary_expression',2,'p_unary_expression','uc_parser2.py',277),
  ('unary_expression -> DECREASE unary_expression','unary_expression',2,'p_unary_expression','uc_parser2.py',278),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','uc_parser2.py',279),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','uc_parser2.py',287),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','uc_parser2.py',288),
  ('postfix_expression -> postfix_expression LPAREN argument_expression RPAREN','postfix_expression',4,'p_postfix_expression','uc_parser2.py',289),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','uc_parser2.py',290),
  ('postfix_expression -> postfix_expression INCREASE','postfix_expression',2,'p_postfix_expression','uc_parser2.py',291),
  ('postfix_expression -> postfix_expression DECREASE','postfix_expression',2,'p_postfix_expression','uc_parser2.py',292),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','uc_parser2.py',302),
  ('cast_expression -> LPAREN type_specifier RPAREN cast_expression','cast_expression',4,'p_cast_expression','uc_parser2.py',303),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','uc_parser2.py',311),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','uc_parser2.py',312),
  ('primary_expression -> STRING','primary_expression',1,'p_primary_expression','uc_parser2.py',313),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','uc_parser2.py',314),
  ('argument_expression -> assignment_expression','argument_expression',1,'p_argument_expression','uc_parser2.py',319),
  ('argument_expression -> argument_expression COMMA assignment_expression','argument_expression',3,'p_argument_expression','uc_parser2.py',320),
  ('constant_expression -> binary_expression','constant_expression',1,'p_constant_expression','uc_parser2.py',328),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','uc_parser2.py',333),
  ('assignment_operator -> EQTIMES','assignment_operator',1,'p_assignment_operator','uc_parser2.py',334),
  ('assignment_operator -> EQDIV','assignment_operator',1,'p_assignment_operator','uc_parser2.py',335),
  ('assignment_operator -> EQMOD','assignment_operator',1,'p_assignment_operator','uc_parser2.py',336),
  ('assignment_operator -> EQPLUS','assignment_operator',1,'p_assignment_operator','uc_parser2.py',337),
  ('assignment_operator -> EQMINUS','assignment_operator',1,'p_assignment_operator','uc_parser2.py',338),
  ('unary_operator -> ADDRESS','unary_operator',1,'p_unary_operator','uc_parser2.py',343),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','uc_parser2.py',344),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','uc_parser2.py',345),
  ('unary_operator -> UMINUS','unary_operator',1,'p_unary_operator','uc_parser2.py',346),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','uc_parser2.py',347),
  ('constant -> INT_CONST','constant',1,'p_constant','uc_parser2.py',352),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','uc_parser2.py',353),
  ('constant -> CHAR_CONST','constant',1,'p_constant','uc_parser2.py',354),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','uc_parser2.py',359),
  ('pointer -> TIMES','pointer',1,'p_pointer','uc_parser2.py',360),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','uc_parser2.py',364),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','uc_parser2.py',365),
  ('direct_declarator -> direct_declarator LBRACKET constant_expression RBRACKET','direct_declarator',4,'p_direct_declarator','uc_parser2.py',366),
  ('direct_declarator -> direct_declarator LBRACKET RBRACKET','direct_declarator',3,'p_direct_declarator','uc_parser2.py',367),
  ('direct_declarator -> direct_declarator LPAREN parameter_list RPAREN','direct_declarator',4,'p_direct_declarator','uc_parser2.py',368),
  ('direct_declarator -> direct_declarator LPAREN id_list RPAREN','direct_declarator',4,'p_direct_declarator','uc_parser2.py',369),
  ('id_list -> ID','id_list',1,'p_id_list','uc_parser2.py',377),
  ('id_list -> id_list ID','id_list',2,'p_id_list','uc_parser2.py',378),
  ('id_list -> empty','id_list',1,'p_id_list','uc_parser2.py',379),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','uc_parser2.py',387),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','uc_parser2.py',388),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','uc_parser2.py',389),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','uc_parser2.py',390),
  ('empty -> <empty>','empty',0,'p_empty','uc_parser2.py',395),
]
